package workspace

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
    "github.com/Azure/go-autorest/autorest"
)

// The package's fully qualified name.
const fqdn = "github.com/innovationnorway/go-databricks/workspace"

        // Format enumerates the values for format.
    type Format string

    const (
                // DBC ...
        DBC Format = "DBC"
                // HTML ...
        HTML Format = "HTML"
                // JUPYTER ...
        JUPYTER Format = "JUPYTER"
                // SOURCE ...
        SOURCE Format = "SOURCE"
            )
    // PossibleFormatValues returns an array of possible values for the Format const type.
    func PossibleFormatValues() []Format {
        return []Format{DBC,HTML,JUPYTER,SOURCE}
    }

        // Language enumerates the values for language.
    type Language string

    const (
                // PYTHON ...
        PYTHON Language = "PYTHON"
                // R ...
        R Language = "R"
                // SCALA ...
        SCALA Language = "SCALA"
                // SQL ...
        SQL Language = "SQL"
            )
    // PossibleLanguageValues returns an array of possible values for the Language const type.
    func PossibleLanguageValues() []Language {
        return []Language{PYTHON,R,SCALA,SQL}
    }

        // ObjectType enumerates the values for object type.
    type ObjectType string

    const (
                // DIRECTORY ...
        DIRECTORY ObjectType = "DIRECTORY"
                // LIBRARY ...
        LIBRARY ObjectType = "LIBRARY"
                // NOTEBOOK ...
        NOTEBOOK ObjectType = "NOTEBOOK"
            )
    // PossibleObjectTypeValues returns an array of possible values for the ObjectType const type.
    func PossibleObjectTypeValues() []ObjectType {
        return []ObjectType{DIRECTORY,LIBRARY,NOTEBOOK}
    }

            // DeleteAttributes ...
            type DeleteAttributes struct {
            Path *string `json:"path,omitempty"`
            Recursive *bool `json:"recursive,omitempty"`
            }

            // ExportResult ...
            type ExportResult struct {
            autorest.Response `json:"-"`
            Content *string `json:"content,omitempty"`
            }

            // ImportAttributes ...
            type ImportAttributes struct {
            Path *string `json:"path,omitempty"`
            // Format - Possible values include: 'SOURCE', 'HTML', 'JUPYTER', 'DBC'
            Format Format `json:"format,omitempty"`
            // Language - Possible values include: 'SCALA', 'PYTHON', 'SQL', 'R'
            Language Language `json:"language,omitempty"`
            Content *string `json:"content,omitempty"`
            Overwrite *bool `json:"overwrite,omitempty"`
            }

            // ListResult ...
            type ListResult struct {
            autorest.Response `json:"-"`
            Objects *[]ObjectInfo `json:"objects,omitempty"`
            }

            // MkdirsAttributes ...
            type MkdirsAttributes struct {
            Path *string `json:"path,omitempty"`
            }

            // ObjectInfo ...
            type ObjectInfo struct {
            autorest.Response `json:"-"`
            // ObjectType - Possible values include: 'NOTEBOOK', 'DIRECTORY', 'LIBRARY'
            ObjectType ObjectType `json:"object_type,omitempty"`
            ObjectID *int64 `json:"object_id,omitempty"`
            Path *string `json:"path,omitempty"`
            Language *string `json:"language,omitempty"`
            }

