swagger: '2.0'

info:
  version: '0.1.0'
  title: Databricks REST API
  description: Databricks REST API 2.0

basePath: /api/2.0

schemes:
  - https

consumes:
  - application/json
produces:
  - application/json

responses:
  Error:
    description: error
    schema:
      $ref: '#/definitions/Error'
  InvalidAccessToken:
    description: invalid access token
    schema:
      type: string

securityDefinitions:
  token:
    type: apiKey
    name: Authorization
    in: header

security:
  - token: []

paths:
  /clusters/create:
    post:
      operationId: create
      tags: [clusters]
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ClusterAttributes'
          required: true
      responses:
        200:
          description: Created
          schema:
            type: object
            properties:
              cluster_id:
                type: string
        403:
          $ref: '#/responses/InvalidAccessToken'
        default:
          $ref: '#/responses/Error'

  /clusters/get:
    get:
      operationId: get
      tags: [clusters]
      parameters:
        - in: query
          name: cluster_id
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ClusterInfo'
        403:
          $ref: '#/responses/InvalidAccessToken'
        default:
          $ref: '#/responses/Error'

  /clusters/edit:
    post:
      operationId: edit
      tags: [clusters]
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              num_workers:
                type: integer
                format: int32
              autoscale:
                $ref: '#/definitions/AutoScale'
              cluster_id:
                type: string
              cluster_name:
                type: string
              spark_version:
                type: string
              spark_conf:
                $ref: '#/definitions/SparkConfPair'
              aws_attributes:
                $ref: '#/definitions/AwsAttributes'
              node_type_id:
                type: string
              driver_node_type_id:
                type: string
              ssh_public_keys:
                type: array
                items:
                  type: string
              custom_tags:
                $ref: '#/definitions/ClusterTag'
              cluster_log_conf:
                $ref: '#/definitions/ClusterLogConf'
              init_scripts:
                type: array
                items:
                  $ref: '#/definitions/InitScriptInfo'
              docker_image:
                $ref: '#/definitions/DockerImage'
              spark_env_vars:
                $ref: '#/definitions/SparkEnvPair'
              autotermination_minutes:
                type: integer
                format: int32
              enable_elastic_disk:
                type: boolean
              instance_pool_id:
                type: string
      responses:
        200:
          description: OK
        403:
          $ref: '#/responses/InvalidAccessToken'
        default:
          $ref: '#/responses/Error'

  /clusters/delete:
    post:
      operationId: delete
      tags: [clusters]
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              cluster_id:
                type: string
      responses:
        200:
          description: Terminated
        403:
          $ref: '#/responses/InvalidAccessToken'
        default:
          $ref: '#/responses/Error'

  /clusters/list:
    get:
      operationId: list
      tags: [clusters]
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ClusterInfo'
        403:
          $ref: '#/responses/InvalidAccessToken'
        default:
          $ref: '#/responses/Error'

  /clusters/permanent-delete:
    post:
      operationId: permanentDelete
      tags: [clusters]
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              cluster_id:
                type: string
      responses:
        200:
          description: Deleted
        403:
          $ref: '#/responses/InvalidAccessToken'
        default:
          $ref: '#/responses/Error'

  /clusters/resize:
    post:
      operationId: resize
      tags: [clusters]
      parameters:
        - name: body
          in: body
          schema:
            type: object
            properties:
              num_workers:
                type: integer
                format: int32
              autoscale:
                $ref: '#/definitions/AutoScale'
              cluster_id:
                type: string
      responses:
        200:
          description: OK
        403:
          $ref: '#/responses/InvalidAccessToken'
        default:
          $ref: '#/responses/Error'

definitions:
  AutoScale:
    type: object
    properties:
      min_workers:
        type: integer
        format: int32
      max_workers:
        type: integer
        format: int32

  SparkNode:
    type: object
    properties:
      private_ip:
        type: string
      public_dns:
        type: string
      node_id:
        type: string
      instance_id:
        type: string
      start_timestamp:
        type: integer
        format: int64
      node_aws_attributes:
        $ref: '#/definitions/SparkNodeAwsAttributes'
      host_private_ip:
        type: string

  SparkNodeAwsAttributes:
    type: object
    properties:
      is_spot:
        type: boolean

  SparkConfPair:
    type: object
    additionalProperties:
      type: string

  AwsAttributes:
    type: object
    properties:
      first_on_demand:
        type: integer
        format: int32
      availability:
        $ref: '#/definitions/AwsAvailability'
      zone_id:
        type: string
      instance_profile_arn:
        type: string
      spot_bid_price_percent:
        type: integer
        format: int32
      ebs_volume_type:
        $ref: '#/definitions/EbsVolumeType'
      ebs_volume_count:
        type: integer
        format: int32
      ebs_volume_size:
        type: integer
        format: int32

  AwsAvailability:
    type: string
    enum:
      - SPOT
      - ON_DEMAND
      - SPOT_WITH_FALLBACK

  EbsVolumeType:
    type: string
    enum:
      - GENERAL_PURPOSE_SSD
      - THROUGHPUT_OPTIMIZED_HDD

  ClusterTag:
    type: object
    additionalProperties:
      type: string

  ClusterLogConf:
    type: object
    properties:
      dbfs:
        $ref: '#/definitions/DbfsStorageInfo'
      s3:
        $ref: '#/definitions/S3StorageInfo'

  DbfsStorageInfo:
    type: object
    properties:
      destination:
        type: string

  S3StorageInfo:
    type: object
    properties:
      destination:
        type: string
      region:
        type: string
      endpoint:
        type: string
      enable_encryption:
        type: boolean
      encryption_type:
        type: string
      kms_key:
        type: string
      canned_acl:
        type: string

  InitScriptInfo:
    type: object
    properties:
      dbfs:
        $ref: '#/definitions/DbfsStorageInfo'
      s3:
        $ref: '#/definitions/S3StorageInfo'

  DockerImage:
    type: object
    properties:
      url:
        type: string
      basic_auth:
        $ref: '#/definitions/DockerBasicAuth'

  DockerBasicAuth:
    type: object
    properties:
      username:
        type: string
      password:
        type: string

  SparkEnvPair:
    type: object
    additionalProperties:
      type: string

  ClusterSource:
    type: string
    enum:
      - UI
      - JOB
      - API

  ClusterState:
    type: string
    enum:
      - PENDING
      - RUNNING
      - RESTARTING
      - RESIZING
      - TERMINATING
      - TERMINATED
      - ERROR
      - UNKNOWN

  LogSyncStatus:
    type: object
    properties:
      last_attempted:
        type: integer
        format: int64
      last_exception:
        type: string

  TerminationReason:
    type: object
    properties:
      code:
        $ref: '#/definitions/TerminationCode'
      parameters:
        $ref: '#/definitions/ParameterPair'

  TerminationCode:
    type: string
    enum:
      - USER_REQUEST
      - JOB_FINISHED
      - INACTIVITY
      - CLOUD_PROVIDER_SHUTDOWN
      - COMMUNICATION_LOST
      - CLOUD_PROVIDER_LAUNCH_FAILURE
      - SPARK_STARTUP_FAILURE
      - INVALID_ARGUMENT
      - UNEXPECTED_LAUNCH_FAILURE
      - INTERNAL_ERROR
      - SPARK_ERROR
      - METASTORE_COMPONENT_UNHEALTHY
      - DBFS_COMPONENT_UNHEALTHY
      - DRIVER_UNREACHABLE
      - DRIVER_UNRESPONSIVE
      - INSTANCE_UNREACHABLE
      - CONTAINER_LAUNCH_FAILURE
      - INSTANCE_POOL_CLUSTER_FAILURE
      - REQUEST_REJECTED
      - INIT_SCRIPT_FAILURE
      - TRIAL_EXPIRED

  ParameterPair:
    type: object
    properties:
      username:
        type: string
      aws_api_error_code:
        type: string
      aws_instance_state_reason:
        type: string
      aws_spot_request_status:
        type: string
      aws_spot_request_fault_code:
        type: string
      aws_impaired_status_details:
        type: string
      aws_instance_status_event:
        type: string
      aws_error_message:
        type: string
      databricks_error_message:
        type: string
      inactivity_duration_min:
        type: string
      instance_id:
        type: string
      instance_pool_id:
        type: string
      instance_pool_error_code:
        type: string

  ClusterAttributes:
    type: object
    properties:
      num_workers:
        type: integer
        format: int32
      autoscale:
        $ref: '#/definitions/AutoScale'
      cluster_name:
        type: string
      spark_version:
        type: string
      spark_conf:
        $ref: '#/definitions/SparkConfPair'
      aws_attributes:
        $ref: '#/definitions/AwsAttributes'
      node_type_id:
        type: string
      driver_node_type_id:
        type: string
      ssh_public_keys:
        type: array
        items:
          type: string
      custom_tags:
        $ref: '#/definitions/ClusterTag'
      cluster_log_conf:
        $ref: '#/definitions/ClusterLogConf'
      init_scripts:
        type: array
        items:
          $ref: '#/definitions/InitScriptInfo'
      docker_image:
        $ref: '#/definitions/DockerImage'
      spark_env_vars:
        $ref: '#/definitions/SparkEnvPair'
      autotermination_minutes:
        type: integer
        format: int32
      enable_elastic_disk:
        type: boolean
      instance_pool_id:
        type: string
      idempotency_token:
        type: string

  ClusterInfo:
    type: object
    properties:
      num_workers:
        type: integer
        format: int32
      autoscale:
        $ref: '#/definitions/AutoScale'
      cluster_id:
        type: string
      creator_user_name:
        type: string
      driver:
        $ref: '#/definitions/SparkNode'
      executors:
        type: array
        items:
          $ref: '#/definitions/SparkNode'
      spark_context_id:
        type: integer
        format: int64
      jdbc_port:
        type: integer
        format: int32
      cluster_name:
        type: string
      spark_version:
        type: string
      spark_conf:
        $ref: '#/definitions/SparkConfPair'
      aws_attributes:
        $ref: '#/definitions/AwsAttributes'
      node_type_id:
        type: string
      driver_node_type_id:
        type: string
      ssh_public_keys:
        type: array
        items:
          type: string
      custom_tags:
        $ref: '#/definitions/ClusterTag'
      cluster_log_conf:
        $ref: '#/definitions/ClusterLogConf'
      init_scripts:
        type: array
        items:
          $ref: '#/definitions/InitScriptInfo'
      docker_image:
        $ref: '#/definitions/DockerImage'
      spark_env_vars:
        $ref: '#/definitions/SparkEnvPair'
      autotermination_minutes:
        type: integer
        format: int32
      enable_elastic_disk:
        type: boolean
      instance_pool_id:
        type: string
      cluster_source:
        $ref: '#/definitions/ClusterSource'
      state:
        $ref: '#/definitions/ClusterState'
      state_message:
        type: string
      start_time:
        type: integer
        format: int64
      terminated_time:
        type: integer
        format: int64
      last_state_loss_time:
        type: integer
        format: int64
      last_activity_time:
        type: integer
        format: int64
      cluster_memory_mb:
        type: integer
        format: int64
      cluster_cores:
        type: number
        format: float
      default_tags:
        $ref: '#/definitions/ClusterTag'
      cluster_log_status:
        $ref: '#/definitions/LogSyncStatus'
      termination_reason:
        $ref: '#/definitions/TerminationReason'

  Error:
    type: object
    required:
      - message
    properties:
      error_code:
        type: string
      message:
        type: string
